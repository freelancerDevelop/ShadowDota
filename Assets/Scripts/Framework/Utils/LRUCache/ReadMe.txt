这是一个Cache algorithms算法，基于下面的描述来实现的。

1. Dictionay + LinkedList
   Dict用来检索；
   LinkedList的添加和删除都是O(1)，添加缓存时在链表头加节点，获取缓存时把特定节点移动（先删除特定节点(O(n))，再到头部添加节点(O(1))）到头，缓存满地时候截断掉尾部的一些节点。

   可以把链表换成双头链表，然后在字典里保存链表节点，在Get方法的时候直接从字典里获取到要移动的节点，然后把这个节点的上一个节点的Next指针指向给下一个节点，下一个节点的Previous指针指向上一个节点，这样就把移动节点的操作简化成O(1)了，提高了缓存读取的效率。

因为我的使用场景是很简单的数据量，所以没有性能上的要求。

